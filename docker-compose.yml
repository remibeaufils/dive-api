version: '3.7'

services:
  main:
    container_name: main
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      # - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    command: npm run start:debug
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      # - redis
      # - postgres
      - mongo
  # redis:
  #   container_name: redis
  #   image: redis:5
  #   networks:
  #     - webnet
  # postgres:
  #   container_name: postgres
  #   image: postgres:12
  #   networks:
  #     - webnet
  #   environment:
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_DB: ${DB_DATABASE_NAME}
  #     PG_DATA: /var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  mongo:
    container_name: 'mongo'
    image: 'mongo'
    networks:
      - webnet
    env_file:
        - .env
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      # - ./docker-init-mongo.js:/docker-entrypoint-initdb.d/docker-init-mongo.js:ro
      - mongodata:/data/db
    ports:
        - '27017:27017'
networks:
  webnet:
volumes:
  # pgdata:
  mongodata:
    external:
      name: mvp_mongodata